<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="3" total="57" passed="53">
  <reporter-output>
    <line>
      <![CDATA[This is some <b>bold</b> and <i>italic</i> text]]>
    </line>
  </reporter-output>
  <suite name="Command line suite" duration-ms="33427" started-at="2013-06-09T19:15:00Z" finished-at="2013-06-09T19:15:34Z">
    <groups>
      <group name="regression">
        <method signature="TestngGroups.mytest3()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest3" class="testng.TestngGroups"/>
        <method signature="TestngGroups.mytest1()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest1" class="testng.TestngGroups"/>
        <method signature="TestngGroups.mytest2()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest2" class="testng.TestngGroups"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TestngGroups.mytest1()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest1" class="testng.TestngGroups"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Command line test" duration-ms="33427" started-at="2013-06-09T19:15:00Z" finished-at="2013-06-09T19:15:34Z">
      <class name="testng.TestngInvocationCount">
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="4" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
        <test-method status="PASS" signature="invocationCountTest()[pri:0, instance:testng.TestngInvocationCount@d8f55c]" name="invocationCountTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invocationCountTest -->
      </class> <!-- testng.TestngInvocationCount -->
      <class name="seleniumTests.TestNGBrowserParameter">
        <test-method status="FAIL" signature="browserParameters(java.lang.String)[pri:0, instance:seleniumTests.TestNGBrowserParameter@1d479cf]" name="browserParameters" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by @Test on method browserParameters but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by @Test on method browserParameters but has not been marked @Optional or defined

	at org.testng.internal.Parameters.createParameters(Parameters.java:155)
	at org.testng.internal.Parameters.createParameters(Parameters.java:355)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:447)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1383)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1075)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1180)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserParameters -->
      </class> <!-- seleniumTests.TestNGBrowserParameter -->
      <class name="pageobjects.BasicFlightSearchTest">
        <test-method status="PASS" signature="flightSearch()[pri:0, instance:pageobjects.BasicFlightSearchTest@893a4a]" name="flightSearch" duration-ms="27605" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flightSearch -->
      </class> <!-- pageobjects.BasicFlightSearchTest -->
      <class name="testng.TestngAnnotationsBeforeAfter">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="beforeSuite" is-config="true" duration-ms="9" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mytest1()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="mytest1" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mytest2()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="mytest2" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mytest3()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="mytest3" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest3 -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:testng.TestngAnnotationsBeforeAfter@746d23]" name="AfterSuite" is-config="true" duration-ms="2" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- testng.TestngAnnotationsBeforeAfter -->
      <class name="testng.TestngGroups">
        <test-method status="PASS" signature="mytest3()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest3" duration-ms="1" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest3 -->
        <test-method status="PASS" signature="mytest1()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest1" duration-ms="5" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="mytest5()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest5" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest5 -->
        <test-method status="PASS" signature="mytest2()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest2" duration-ms="1" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest2 -->
        <test-method status="PASS" signature="mytest4()[pri:0, instance:testng.TestngGroups@e90906]" name="mytest4" duration-ms="0" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest4 -->
      </class> <!-- testng.TestngGroups -->
      <class name="testng.TestngBasicTests">
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="13" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="8" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="10" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="4" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="myFirstTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myFirstTestngTest" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myFirstTestngTest -->
        <test-method status="PASS" signature="mySecondTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="mySecondTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mySecondTestngTest -->
        <test-method status="PASS" signature="myThirdTestngTest()[pri:0, instance:testng.TestngBasicTests@c51089]" name="myThirdTestngTest" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myThirdTestngTest -->
      </class> <!-- testng.TestngBasicTests -->
      <class name="pageobjects.FlightSearchPageTest">
        <test-method status="PASS" signature="flightSearchTest()[pri:0, instance:pageobjects.FlightSearchPageTest@5fadce]" name="flightSearchTest" duration-ms="5649" started-at="2013-06-09T12:15:28Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flightSearchTest -->
      </class> <!-- pageobjects.FlightSearchPageTest -->
      <class name="reporting.ReportingTest">
        <test-method status="PASS" signature="simpleReportingTest()[pri:0, instance:reporting.ReportingTest@151e824]" name="simpleReportingTest" duration-ms="2" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleReportingTest -->
        <test-method status="FAIL" signature="fireFoxTestWithScreenshotReport()[pri:0, instance:reporting.ReportingTest@151e824]" name="fireFoxTestWithScreenshotReport" duration-ms="2" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.33.0', revision: '4ecaf82108b2a6cc6f006aae81961236eba93358', time: '2013-05-22 12:00:17'
System info: os.name: 'Linux', os.arch: 'i386', os.version: '3.5.0-17-generic', java.version: '1.7.0_15'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.33.0', revision: '4ecaf82108b2a6cc6f006aae81961236eba93358', time: '2013-05-22 12:00:17'
System info: os.name: 'Linux', os.arch: 'i386', os.version: '3.5.0-17-generic', java.version: '1.7.0_15'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:216)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:111)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:129)
	at reporting.ReportingTest.fireFoxTestWithScreenshotReport(ReportingTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: org.apache.http.conn.HttpHostConnectException: Connection to http://localhost:4444 refused
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:190)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:151)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:640)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:479)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)
	at org.openqa.selenium.remote.HttpCommandExecutor.fallBackExecute(HttpCommandExecutor.java:316)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:295)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:527)
	... 38 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391)
	at java.net.Socket.connect(Socket.java:579)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:127)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	... 46 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fireFoxTestWithScreenshotReport -->
        <test-method status="PASS" signature="reportingTestWithMessage()[pri:0, instance:reporting.ReportingTest@151e824]" name="reportingTestWithMessage" duration-ms="3" started-at="2013-06-09T12:15:34Z" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
            <line>
              <![CDATA[This is some <b>bold</b> and <i>italic</i> text]]>
            </line>
          </reporter-output>
        </test-method> <!-- reportingTestWithMessage -->
      </class> <!-- reporting.ReportingTest -->
      <class name="testng.TestngDependency">
        <test-method status="FAIL" signature="mytest1()[pri:0, instance:testng.TestngDependency@18bd37a]" name="mytest1" duration-ms="1" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at testng.TestngDependency.mytest1(TestngDependency.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="mytest3()[pri:0, instance:testng.TestngDependency@18bd37a]" name="mytest3" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest3 -->
        <test-method status="PASS" signature="mytest4()[pri:0, instance:testng.TestngDependency@18bd37a]" name="mytest4" duration-ms="0" started-at="2013-06-09T12:15:00Z" finished-at="2013-06-09T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest4 -->
        <test-method status="SKIP" signature="mytest2()[pri:0, instance:testng.TestngDependency@18bd37a]" name="mytest2" duration-ms="1" started-at="2013-06-09T12:15:34Z" depends-on-methods="testng.TestngDependency.mytest1" finished-at="2013-06-09T12:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest2 -->
      </class> <!-- testng.TestngDependency -->
      <class name="testng.TestngDataProvider">
        <test-method status="PASS" signature="mytest1(java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest1" duration-ms="0" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider1" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="mytest1(java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest1" duration-ms="0" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider1" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="mytest1(java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest1" duration-ms="5" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider1" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[China]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="mytest1(java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest1" duration-ms="1" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider1" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest1 -->
        <test-method status="PASS" signature="mytest2(java.lang.String, java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest2" duration-ms="1" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider2" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Switzerland]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest2 -->
        <test-method status="PASS" signature="mytest2(java.lang.String, java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest2" duration-ms="1" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider2" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest2 -->
        <test-method status="PASS" signature="mytest2(java.lang.String, java.lang.String)[pri:0, instance:testng.TestngDataProvider@156f14c]" name="mytest2" duration-ms="3" started-at="2013-06-09T12:15:34Z" data-provider="dataprovider2" finished-at="2013-06-09T12:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[China]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.cn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest2 -->
      </class> <!-- testng.TestngDataProvider -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
